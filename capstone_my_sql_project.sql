-- created database as amazon_sales_data --

create database amazon_sales_data;
use amazon_sales_data;

-- create a table as sales_amazon added the columns--

create table sales_amazon(
Invoice_ID char(50) not null,
Branch varchar(50) not null ,
City varchar(50) not null,
Customer_type varchar(50) not null,
Gender varchar(50) not null,
Product_line varchar(50) not null,
Unit_price decimal(10,2) not null,
Quantity int not null	,
Tax decimal(10,4) not null ,
Total decimal(10,4) not null ,
datee Date not null,
Timee time  not null,
Payment varchar(50) not null,
cogs decimal(10,4) not null,
gross_margin_percentage decimal(10,5) not null,
gross_income decimal(10,5) not null,
Rating decimal(10,2) not null,
primary key (Invoice_ID)
);
drop table  sales_amazon;
-- imported data into workbench--
select * from sales_amazon;

SET SQL_SAFE_UPDATES = 0;

-- feature engineering --

ALTER TABLE sales_amazon ADD COLUMN timeofday VARCHAR(10);


UPDATE sales_amazon 
SET timeofday = CASE 
    WHEN HOUR(Timee) BETWEEN 6 AND 11 THEN 'Morning'
    WHEN HOUR(Timee) BETWEEN 12 AND 17 THEN 'Afternoon'
    ELSE 'Evening' 
END;

SELECT Timee, timeofday FROM sales_amazon;

alter table sales_amazon add column day_name varchar(50);

update sales_amazon 
SET day_name = dayname(datee);

select datee,day_name
from sales_amazon;

alter table sales_amazon add column month_name varchar(50);
update sales_amazon
set month_name = monthname(datee);

select datee,month_name
from sales_amazon ;

-- EDA(EXPLORATRY DATA ANALYSIS)--

SELECT COUNT(*) AS Total_Rows FROM sales_amazon;
SELECT COUNT(*) AS Total_Columns FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'sales_amazon';
DESCRIBE sales_amazon;

-- Business Questions--

-- 1.What is the count of distinct cities in the dataset?
SELECT 
    COUNT(DISTINCT city), city
FROM
    sales_amazon
GROUP BY city;
# 3 distinct citys '1', 'Mandalay''1', 'Naypyitaw''1', 'Yangon'

-- 2.For each branch, what is the corresponding city? 
  SELECT city, branch
FROM
    sales_amazon; 
 
# for each as brachnes A,B,C

-- 3.What is the count of distinct product lines in the dataset? 
SELECT 
    COUNT(DISTINCT product_line), Product_line
FROM
    sales_amazon
GROUP BY product_line;
# the count of product line '1', 'Electronic accessories''1', 'Fashion accessories''1', 'Food and beverages''1',
# 'Health and beauty''1', 'Home and lifestyle''1', 'Sports and travel'

-- 4.Which payment method occurs most frequently? 
SELECT 
    payment, COUNT(*) AS frequency
FROM
    sales_amazon
GROUP BY Payment
ORDER BY frequency DESC
LIMIT 1;
#Ewallet paymemnt occurs 345 times

-- 5.Which product line has the highest sales? 
SELECT 
    product_line, SUM(quantity) AS high_sales
FROM
    sales_amazon
GROUP BY Product_line
ORDER BY high_sales DESC
LIMIT 1;
#'Electronic accessories', highest sales '971'

-- 6. How much revenue is generated each month?
select sum(total) as revenue , month_name
from sales_amazon
group by month_name
order by month_name;
#revenue generated by each month '97219.3740', 'February''116291.8680', 'January''109455.5070', 'March'

-- 7. In which month did the cost of goods sold reach its peak? 
select month_name, sum(cogs) as peak 
from sales_amazon
group by month_name
order by peak desc 
limit 1;
#In'January', is the peak cogs with '110754.1600'

-- 8.Which product line generated the highest revenue? 
select product_line,sum(total) as revenue 
from sales_amazon
group by Product_line
order by revenue desc
limit 1;
#'Food and beverages', highest revenue with '56144.8440'

-- 9.In which city was the highest revenue recorded? 
select city,sum(total) as highest_revenue
from sales_amazon
group by city 
order by highest_revenue desc 
limit 1;
# 'Naypyitaw',  as highest revenue recorded with '110568.7065'

-- 10.Which product line incurred the highest Value Added Tax? 
select product_line ,sum(tax) as high_tax
from sales_amazon
group by Product_line
order by high_tax desc
limit 1 ;
#'Food and beverages', as highest vat '2673.5640'

-- 11.For each product line, add a column indicating "Good" if its sales are above average, otherwise "Bad."?
SELECT 
    product_line,
    SUM(total) AS total_sales,
    CASE
        WHEN
            SUM(total) > (SELECT 
                    AVG(total_sales)
                FROM
                    (SELECT 
                        SUM(total) AS total_sales
                    FROM
                        sales_amazon
                    GROUP BY product_line) AS subquery)
        THEN
            'Good'
        ELSE 'Bad'
    END AS sales_performance
FROM
    sales_amazon
GROUP BY product_line
ORDER BY product_line DESC;
           
-- 12.Identify the branch that exceeded the average number of products sold. 
SELECT branch, SUM(quantity) AS Total_Quantity
FROM sales_amazon
GROUP BY branch
HAVING SUM(quantity) > (SELECT AVG(total_quantity) 
                         FROM (SELECT SUM(quantity) AS total_quantity 
                               FROM sales_amazon 
                               GROUP BY branch) AS subquery);
 # 'A',  branch as the exceeded avg no of product sold '1859'
                              
-- 13.Which product line is most frequently associated with each gender? 
select gender,product_line,count(*) as frequency
from sales_amazon 
group by product_line,gender 
order by frequency desc 
;                          

-- 14.Calculate the average rating for each product line  
select avg(rating) as avg_rating , product_line
from sales_amazon 
group by product_line 
order by avg_rating desc;
# the avg rating for each productline '7.113218', 'Food and beverages''7.029213', 'Fashion accessories''7.003289', 
#'Electronic accessories''6.916265', 'Sports and travel''6.837500', 'Home and lifestyle''Health and beauty''6.924706', 

-- 15.Count the sales occurrences for each time of day on every weekday.
select dayname(datee) as week_day,timeofday as time_off_day,count(*) as total_sales 
from sales_amazon
group by week_day,timeofday
order by field(week_day , 'monday','tuesday','wedsnday','thursday','friday','saturday','sunday'),timeofday;

-- 16.Identify the customer type contributing the highest revenue. 
select sum(total) as highest_sales, customer_type
from sales_amazon
group by Customer_type
order by highest_sales desc 
limit 1;
#the highest revenue contributing by "member" with 164223.4440'

-- 17. Determine the city with the highest VAT percentage 
SELECT city, 
      round( AVG(tax/ total * 100),2) AS Average_VAT_Percentage
FROM sales_amazon
GROUP BY city
ORDER BY Average_VAT_Percentage DESC
limit 1;
#'Yangon', as highest tax  '4.76'

-- 18.Identify the customer type with the highest VAT payments.
select customer_type,sum(tax) highest_tax
from sales_amazon
group by Customer_type
order by highest_tax desc ;
#'Member', as highest tax '7820.1640'
#'Normal',  lowest tax'7559.2050'

-- 19.What is the count of distinct customer types in the dataset?
select count(distinct customer_type),customer_type as distinct_customers
from sales_amazon
group by Customer_type;
#The distinct customer type is 2 'MEMBER','NORMAL'

-- 20.What is the count of distinct payment methods in the dataset? 
select count(distinct payment) as payment_type,Payment
from sales_amazon
group by payment;
#'1'- 'Cash','2'-'Credit_card','3'-'Ewallet'

-- 21.Which customer type occurs most frequently? 
select customer_type,count(*) as frequency
from sales_amazon
group by Customer_type
order by frequency desc 
limit 1;
#'Member' type occurs most frequently '501'

-- 22.Identify the customer type with the highest purchase frequency. 
SELECT customer_type, sum(total) as total,
       COUNT(*) AS Purchase_Frequency
FROM sales_amazon
GROUP BY customer_type
ORDER BY Purchase_Frequency DESC
LIMIT 1;
#'Member' type as highest revnue'164223.4440' with most frequqntly'501'

-- 23.Determine the predominant gender among customers.
select  gender,count(*) as frequncy, customer_type
from sales_amazon
group  by gender,Customer_type 
order by frequncy desc ;
#'Female'-'261'-'Member','Male'-'259'-'Normal','Male'-'240'-'Member','Female'-'240'-'Normal'

-- 24.Examine the distribution of genders within each branch. 
select gender,branch,count(*) as gender_count
from sales_amazon
group by Gender,branch
order by gender_count desc;
#'Male'-'A'-'179'
#'Female'-'C'-'178'
#'Male'-'B'-'170'
#'Female'-'B'-'162'
#'Female'-'A'-'161'
#'Male'-'C'-'150'

 -- 25.Identify the time of day when customers provide the most ratings.
select timeofday,count(rating) as ratingss
from sales_amazon
group by timeofday
order by ratingss desc;
#'Afternoon', '528''Evening', '281''Morning', '191'
#in afternoon we can see that most ratings happen with 528

-- 26.Determine the time of day with the highest customer ratings for each branch.
select timeofday,branch,avg(rating) as avg_ratings
from sales_amazon
group by timeofday,branch
order by avg_ratings desc;

-- 27.Identify the day of the week with the highest average ratings.
SELECT DAYNAME(datee) AS Weekday, 
       AVG(rating) AS Average_Rating
FROM sales_amazon
GROUP BY Weekday
ORDER BY Average_Rating DESC
LIMIT 1;
#'Monday' as highest avg rating with '7.153600'

-- 28.Determine the day of the week with the highest average ratings for each branch.
select dayname(datee) as weekday,avg(rating) as avg_rating , branch
from sales_amazon
group by branch , weekday
order by branch,avg_rating desc ;


SELECT product_line, 
       SUM(total) AS Total_Revenue
FROM sales_amazon
GROUP BY product_line
ORDER BY Total_Revenue DESC;

SELECT product_line, 
       COUNT(*) AS Sales_Count
FROM sales_amazon
GROUP BY product_line
ORDER BY Sales_Count DESC;

SELECT product_line, 
       AVG(rating) AS Average_Rating
FROM sales_amazon
GROUP BY product_line
ORDER BY Average_Rating DESC;

SELECT MONTHNAME(datee) AS Month, 
       SUM(total) AS Revenue
FROM sales_amazon
GROUP BY MONTH
ORDER BY MONTH desc;

SELECT timeofday, 
       SUM(total) AS Revenue
FROM sales_amazon
GROUP BY timeofday
ORDER BY Revenue DESC;



SELECT branch, 
       SUM(total) AS Total_Revenue
FROM sales_amazon
GROUP BY branch
ORDER BY Total_Revenue DESC;

SELECT MONTHNAME(datee) AS Month, 
       SUM(cogs) AS Total_COGS
FROM sales_amazon
GROUP BY MONTH
ORDER BY Total_COGS DESC;


SELECT customer_type, 
       SUM(total) AS Total_Revenue
FROM sales_amazon
GROUP BY customer_type
ORDER BY Total_Revenue DESC;

SELECT gender, 
       COUNT(*) AS Gender_Count
FROM sales_amazon
GROUP BY gender
ORDER BY Gender_Count DESC;

SELECT customer_type, 
       SUM(tax) AS Total_VAT
FROM sales_amazon
GROUP BY customer_type
ORDER BY Total_VAT DESC;

